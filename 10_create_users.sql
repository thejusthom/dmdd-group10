SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE create_users
IS
  v_user_exists NUMBER;
  v_role_exists NUMBER;
  v_error_code NUMBER;
  v_error_msg VARCHAR2(4000);
BEGIN
  -- Drop users if they already exist
  v_user_exists := drop_user('DOCTOR_USER');
  v_user_exists := drop_user('NURSE_USER');
  v_user_exists := drop_user('PATIENT_USER');
  v_user_exists := drop_user('DONOR_USER');
  
  -- Drop roles if they already exist
  v_role_exists := drop_role('DOCTOR_ROLE');
  v_role_exists := drop_role('NURSE_ROLE');
  v_role_exists := drop_role('PATIENT_ROLE');
  v_role_exists := drop_role('DONOR_ROLE');

  -- Create roles
  EXECUTE IMMEDIATE 'CREATE ROLE DOCTOR_ROLE';
  DBMS_OUTPUT.PUT_LINE('Created DOCTOR_ROLE');
  EXECUTE IMMEDIATE 'CREATE ROLE NURSE_ROLE';
  DBMS_OUTPUT.PUT_LINE('Created NURSE_ROLE');
  EXECUTE IMMEDIATE 'CREATE ROLE PATIENT_ROLE';
  DBMS_OUTPUT.PUT_LINE('Created PATIENT_ROLE');
  EXECUTE IMMEDIATE 'CREATE ROLE DONOR_ROLE';
  DBMS_OUTPUT.PUT_LINE('Created DONOR_ROLE');

  -- Create users
  EXECUTE IMMEDIATE 'CREATE USER DOCTOR_USER IDENTIFIED BY passDoctor2024#';
  DBMS_OUTPUT.PUT_LINE('Created DOCTOR_USER');
  EXECUTE IMMEDIATE 'CREATE USER NURSE_USER IDENTIFIED BY passNurse2024#';
  DBMS_OUTPUT.PUT_LINE('Created NURSE_USER');
  EXECUTE IMMEDIATE 'CREATE USER PATIENT_USER IDENTIFIED BY passPatient2024#';
  DBMS_OUTPUT.PUT_LINE('Created PATIENT_USER');
  EXECUTE IMMEDIATE 'CREATE USER DONOR_USER IDENTIFIED BY passDonor2024#';
  DBMS_OUTPUT.PUT_LINE('Created DONOR_USER');

  -- Grant table permissions
  -- Doctor permissions
  EXECUTE IMMEDIATE 'GRANT SELECT ON HEALTH_REPORT TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON APPOINTMENT TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON DONOR_BLOOD_CAMP_ASSO TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON doctor_information_view TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON appointment_information_view TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON blood_inventory_view TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON doctor_appointment_view TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON top_blood_donors_view TO DOCTOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT EXECUTE ON manage_appointment TO DOCTOR_ROLE'
  EXECUTE IMMEDIATE 'GRANT SELECT ON appointment_id_seq TO DOCTOR_ROLE';
  DBMS_OUTPUT.PUT_LINE('Granted  permissions to DOCTOR_ROLE');

  -- Nurse permissions
  EXECUTE IMMEDIATE 'GRANT SELECT, UPDATE (WEIGHT, BP, PULSE) ON HEALTH_REPORT TO NURSE_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON APPOINTMENT TO NURSE_ROLE';
  EXECUTE IMMEDIATE 'GRANT EXECUTE ON manage_appointment TO NURSE_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON appointment_id_seq TO NURSE_ROLE';
  DBMS_OUTPUT.PUT_LINE('Granted permissions to NURSE_ROLE');

  -- Patient permissions
  EXECUTE IMMEDIATE 'GRANT SELECT ON HEALTH_REPORT TO PATIENT_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON PATIENT TO PATIENT_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT,UPDATE ON patient_information_view TO PATIENT_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON appointment_information_view TO PATIENT_ROLE';
  EXECUTE IMMEDIATE 'GRANT EXECUTE ON manage_appointment TO PATIENT_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON appointment_id_seq TO PATIENT_ROLE';
  DBMS_OUTPUT.PUT_LINE('Granted permissions to PATIENT_ROLE');

  -- Donor permissions
  EXECUTE IMMEDIATE 'GRANT SELECT ON DONOR_BLOOD_CAMP_ASSO TO DONOR_ROLE';
  EXECUTE IMMEDIATE 'GRANT SELECT ON top_blood_donors_view TO DONOR_ROLE';
  DBMS_OUTPUT.PUT_LINE('Granted permissions to DONOR_ROLE');


  -- Assign permissions to roles
  EXECUTE IMMEDIATE 'GRANT DOCTOR_ROLE TO DOCTOR_USER';
  EXECUTE IMMEDIATE 'GRANT NURSE_ROLE TO NURSE_USER';
  EXECUTE IMMEDIATE 'GRANT PATIENT_ROLE TO PATIENT_USER';
  EXECUTE IMMEDIATE 'GRANT DONOR_ROLE TO DONOR_USER';
  EXECUTE IMMEDIATE 'GRANT CONNECT TO DOCTOR_USER';
  EXECUTE IMMEDIATE 'GRANT CONNECT TO NURSE_USER';  
  EXECUTE IMMEDIATE 'GRANT CONNECT TO PATIENT_USER';
  EXECUTE IMMEDIATE 'GRANT CONNECT TO DONOR_USER';
  DBMS_OUTPUT.PUT_LINE('Assigned roles to users');
EXCEPTION
    WHEN OTHERS THEN
        v_error_code := SQLCODE;
        v_error_msg := SUBSTR(SQLERRM, 1, 4000);
        DBMS_OUTPUT.PUT_LINE('Error Code: ' || v_error_code || ', Error Message: ' || v_error_msg);
END create_users;
/
